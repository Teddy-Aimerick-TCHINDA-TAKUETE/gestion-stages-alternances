import{a as A}from"./chunk-4T322RVL.js";import{$ as C,A as g,B as h,D as l,R as w,T as S,Z as b,da as x,ea as E,fa as p,ga as I,ha as P,ja as U,ka as y,la as F,n,p as m,pa as M,q as _,qa as T,s as d,sa as N,t as a,ta as R,u as s,v as o,w as v}from"./chunk-XPQBKRV7.js";function O(r,t){r&1&&(s(0,"span"),l(1,"\u274C L'email est requis."),o())}function D(r,t){r&1&&(s(0,"span"),l(1,"\u274C L'email n'est pas valide."),o())}function k(r,t){if(r&1&&(s(0,"div",9),d(1,O,2,0,"span",3)(2,D,2,0,"span",3),o()),r&2){let i,e,u=h();n(),a("ngIf",(i=u.userForm.get("email"))==null||i.errors==null?null:i.errors.required),n(),a("ngIf",(e=u.userForm.get("email"))==null||e.errors==null?null:e.errors.email)}}function V(r,t){r&1&&(s(0,"label"),l(1,"Ancien mot de passe :"),o())}function G(r,t){r&1&&v(0,"input",10)}function j(r,t){r&1&&(s(0,"span"),l(1,"\u274C L'ancien mot de passe est requis."),o())}function L(r,t){if(r&1&&(s(0,"div",9),d(1,j,2,0,"span",3),o()),r&2){let i,e=h();n(),a("ngIf",e.authService.getCurrentUserRole()!=="SUPER_ADMIN"&&((i=e.userForm.get("oldPassword"))==null||i.errors==null?null:i.errors.required))}}function B(r,t){r&1&&(s(0,"span"),l(1,"\u274C Le noueau mot de passe est requis."),o())}function z(r,t){if(r&1&&(s(0,"div",9),d(1,B,2,0,"span",3),o()),r&2){let i,e=h();n(),a("ngIf",(i=e.userForm.get("newPassword"))==null||i.errors==null?null:i.errors.required)}}function H(r,t){r&1&&(s(0,"div"),l(1," \u274C Les deux nouveaux mots de passe ne correspondent pas. "),o())}var q=class r{constructor(t,i,e,u,c,f){this.authService=t;this.fb=i;this.userService=e;this.route=u;this.router=c;this.alertService=f;this.userForm=this.fb.group({email:["",[p.required,p.email]],password:["",p.required],oldPassword:["",p.required],newPassword:["",p.required],confirmPassword:["",p.required]},{validators:this.passwordsMatchValidator})}userForm;userId;message="";messageType="";passwordsMatchValidator(t){let i=t.get("newPassword")?.value,e=t.get("confirmPassword")?.value;return i===e?null:{passwordMismatch:!0}}ngOnInit(){this.userId=Number(this.route.snapshot.paramMap.get("id")),this.userId&&this.userService.getUserById(this.userId).subscribe(t=>{this.userForm.patchValue({email:t?.email,password:t?.password,role:t?.role}),this.authService.getCurrentUserRole()==="SUPER_ADMIN"&&this.userForm.patchValue({oldPassword:t?.password})})}onSubmit(){if(this.userForm.valid&&this.userId){if(this.userForm.hasError("passwordMismatch")){this.messageType="error",this.message="\u274C Les nouveaux mots de passe ne correspondent pas.",this.alertService.error(this.message);return}let t={oldPassword:this.userForm.value.oldPassword,newPassword:this.userForm.value.newPassword};this.userForm.value.password=this.userForm.value.newPassword;let i={id:this.userId,email:this.userForm.value.email,password:this.userForm.value.password,role:this.userForm.value.role};this.authService.getCurrentUserRole()==="SUPER_ADMIN"?this.userId&&this.userService.updateUser(this.userId,i).subscribe({next:()=>{this.messageType="success",this.message="\u2705 Utilisateur modifi\xE9 avec succ\xE8s !",this.alertService.success(this.message).then(()=>{this.router.navigate(["/users",this.userId])})},error:e=>{console.error("Erreur lors de la modification de l'utilisateur",e),this.messageType="error",this.message="\u274C Erreur lors de la modification de l'utilisateur.",this.alertService.error(this.message)}}):this.userService.verifyPassword(this.userId,this.userForm.value.oldPassword).subscribe({next:()=>{this.userId&&this.userService.updateUser(this.userId,i).subscribe({next:()=>{this.messageType="success",this.message="\u2705 Utilisateur modifi\xE9 avec succ\xE8s !",this.alertService.success(this.message).then(()=>{this.router.navigate(["/users",this.userId])})},error:e=>{console.error("Erreur lors de la modification de l'utilisateur",e),this.messageType="error",this.message="\u274C Erreur lors de la modification de l'utilisateur.",this.alertService.error(this.message)}})},error:()=>{this.messageType="error",this.message="\u274C Ancien mot de passe incorrect.",this.alertService.error(this.message)}})}else this.messageType="error",this.message="\u26A0\uFE0F Merci de compl\xE9ter le formulaire correctement.",this.alertService.error(this.message)}annuler(){this.messageType="error",this.message="\u274C Ete vous sur de vouloir annuler les modifications ?",this.alertService.confirm(this.message).then(t=>{t.isConfirmed&&this.router.navigate(["/users",this.userId])})}static \u0275fac=function(i){return new(i||r)(m(x),m(T),m(A),m(b),m(C),m(R))};static \u0275cmp=_({type:r,selectors:[["app-user-edit"]],decls:22,vars:8,consts:[[3,"ngSubmit","formGroup"],["type","email","autocomplete","email","formControlName","email"],["class","error",4,"ngIf"],[4,"ngIf"],["type","password","autocomplete","current-password","formControlName","oldPassword","required","",4,"ngIf"],["type","password","autocomplete","current-password","formControlName","newPassword","required",""],["type","password","autocomplete","current-password","formControlName","confirmPassword","required",""],["type","submit",3,"disabled"],["type","button",3,"click"],[1,"error"],["type","password","autocomplete","current-password","formControlName","oldPassword","required",""]],template:function(i,e){if(i&1&&(s(0,"h2"),l(1,"Modifier un Utilisateur"),o(),s(2,"form",0),g("ngSubmit",function(){return e.onSubmit()}),s(3,"label"),l(4,"Email :"),o(),v(5,"input",1),d(6,k,3,2,"div",2)(7,V,2,0,"label",3)(8,G,1,0,"input",4)(9,L,2,1,"div",2),s(10,"label"),l(11,"Nouveau mot de passe :"),o(),v(12,"input",5),d(13,z,2,1,"div",2),s(14,"label"),l(15,"Confirmation du nouveau mot de passe :"),o(),v(16,"input",6),d(17,H,2,0,"div",3),s(18,"button",7),l(19,"Enregistrer"),o(),s(20,"button",8),g("click",function(){return e.annuler()}),l(21,"Annuler"),o()()),i&2){let u,c,f;n(2),a("formGroup",e.userForm),n(4),a("ngIf",((u=e.userForm.get("email"))==null?null:u.invalid)&&((u=e.userForm.get("email"))==null?null:u.touched)),n(),a("ngIf",e.authService.getCurrentUserRole()!=="SUPER_ADMIN"),n(),a("ngIf",e.authService.getCurrentUserRole()!=="SUPER_ADMIN"),n(),a("ngIf",e.authService.getCurrentUserRole()!=="SUPER_ADMIN"&&((c=e.userForm.get("oldPassword"))==null?null:c.invalid)&&((c=e.userForm.get("oldPassword"))==null?null:c.touched)),n(4),a("ngIf",((f=e.userForm.get("newPassword"))==null?null:f.invalid)&&((f=e.userForm.get("newPassword"))==null?null:f.touched)),n(4),a("ngIf",e.userForm.hasError("passwordMismatch")),n(),a("disabled",e.userForm.invalid)}},dependencies:[S,w,N,U,E,I,P,M,y,F],styles:["form[_ngcontent-%COMP%]{max-width:600px;margin:50px auto;padding:30px;background:#fff;border-radius:8px;box-shadow:0 0 10px #0000001a}input[_ngcontent-%COMP%], select[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{width:100%;padding:10px 15px;margin:10px 0 20px;border:1px solid #ccc;border-radius:5px;font-size:1rem}label[_ngcontent-%COMP%]{font-weight:700;display:block;margin-bottom:5px}button[_ngcontent-%COMP%]{padding:10px 20px;margin-right:10px;background-color:#007bff;color:#fff;border:none;border-radius:6px;cursor:pointer;font-size:1rem;transition:background-color .3s}button[_ngcontent-%COMP%]:hover{background-color:#0056b3}button[type=button][_ngcontent-%COMP%]{background-color:#6c757d}button[type=button][_ngcontent-%COMP%]:hover{background-color:#565e64}h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:30px;color:#333}.error[_ngcontent-%COMP%]{color:red;margin-bottom:10px}"]})};export{q as UserEditComponent};
